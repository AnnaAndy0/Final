{"ast":null,"code":"var _jsxFileName = \"/Users/anna/final/frontend/components/dishes.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Dishes({\n  restId\n}) {\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState();\n  const {\n    addItem\n  } = useContext(AppContext);\n  const GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n  const router = useRouter();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  });\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  let restaurant = data.restaurant;\n\n  if (restId > 0) {\n    return __jsx(React.Fragment, null, restaurant.dishes.map(res => __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      style: {\n        padding: 0\n      },\n      key: res.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 300,\n        width: 348\n      },\n      src: `http://localhost:1337${res.image.url}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, __jsx(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    }, res.name), __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, res.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      color: \"danger\",\n      outline: true,\n      color: \"danger\",\n      onClick: () => addItem(res),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, \"+ Add To Cart\"))))));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 18\n      }\n    }, \" \");\n  }\n}\n\nexport default Dishes;","map":{"version":3,"sources":["/Users/anna/final/frontend/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","restId","restaurantID","setRestaurantID","addItem","GET_RESTAURANT_DISHES","router","loading","error","data","variables","id","restaurant","dishes","map","res","padding","margin","height","width","image","url","name","description"],"mappings":"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","sourcesContent":["import {useRouter} from \"next/router\"\r\nimport {gql,useQuery} from '@apollo/client';\r\nimport {useState, useContext} from 'react'\r\nimport AppContext from \"./context\"\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardImg,\r\n  CardText,\r\n  CardTitle,\r\n  Row,\r\n  Col} from \"reactstrap\";\r\nfunction Dishes({restId}){\r\n  const [restaurantID, setRestaurantID] = useState()\r\n  const {addItem} = useContext(AppContext)\r\n\r\nconst GET_RESTAURANT_DISHES = gql`\r\n  query($id: ID!) {\r\n    restaurant(id: $id) {\r\n      id\r\n      name\r\n      dishes {\r\n        id\r\n        name\r\n        description\r\n        price\r\n        image {\r\n          url\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n\r\n  const router = useRouter();\r\n\r\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\r\n    variables: { id: restId},\r\n  });\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p></p>;\r\n  if (!data) return <p>Not found</p>;\r\n\r\n  let restaurant = data.restaurant;\r\n\r\n  if (restId > 0){\r\n\r\n    return (\r\n      \r\n      <>\r\n          {restaurant.dishes.map((res) => (\r\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\r\n              <Card style={{ margin: \"0 10px\" }}>\r\n                <CardImg\r\n                  top={true}\r\n                  style={{ height: 300, width:348 }}\r\n                  src={`http://localhost:1337${res.image.url}`}\r\n                />\r\n                <CardBody>\r\n                  <CardTitle>{res.name}</CardTitle>\r\n                  <CardText>{res.description}</CardText>\r\n                </CardBody>\r\n                <div className=\"card-footer\">\r\n                  <Button color=\"danger\"\r\n                    outline\r\n                    color=\"danger\"\r\n                    onClick = {()=> addItem(res)}\r\n                  >\r\n                    + Add To Cart\r\n                  </Button>\r\n                  \r\n                  \r\n                </div>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </>\r\n        )}\r\n        else{\r\n          return <h1 > </h1>\r\n        }\r\n          \r\n        }\r\n        \r\n       \r\n\r\n    export default Dishes"]},"metadata":{},"sourceType":"module"}